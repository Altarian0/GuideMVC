// <auto-generated />
using System;
using GuideMVC_.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GuideMVC_.Migrations
{
    [DbContext(typeof(GuideDBContext))]
    [Migration("20210505091430_refactor")]
    partial class refactor
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Cyrillic_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GuideMVC_.Models.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("GuideMVC_.Models.RelativeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("RelativeTypes");
                });

            modelBuilder.Entity("GuideMVC_.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Birthdate")
                        .HasColumnType("date");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Middlename")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PassportNumber")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("PassportSeries")
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)");

                    b.HasKey("Id");

                    b.HasIndex("GenderId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("GuideMVC_.Models.UserRelative", b =>
                {
                    b.Property<int>("ToUserId")
                        .HasColumnType("int");

                    b.Property<int>("FromUserId")
                        .HasColumnType("int");

                    b.Property<int>("RelativeTypeId")
                        .HasColumnType("int");

                    b.HasKey("ToUserId", "FromUserId", "RelativeTypeId");

                    b.HasIndex("FromUserId");

                    b.HasIndex("RelativeTypeId");

                    b.ToTable("UserRelatives");
                });

            modelBuilder.Entity("GuideMVC_.Models.User", b =>
                {
                    b.HasOne("GuideMVC_.Models.Gender", "Gender")
                        .WithMany("Users")
                        .HasForeignKey("GenderId")
                        .HasConstraintName("FK_User_Genders")
                        .IsRequired();

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("GuideMVC_.Models.UserRelative", b =>
                {
                    b.HasOne("GuideMVC_.Models.User", "FromUser")
                        .WithMany("UserRelativeFromUsers")
                        .HasForeignKey("FromUserId")
                        .HasConstraintName("FK_UserRelatives_User1")
                        .IsRequired();

                    b.HasOne("GuideMVC_.Models.RelativeType", "RelativeType")
                        .WithMany("UserRelatives")
                        .HasForeignKey("RelativeTypeId")
                        .HasConstraintName("FK_UserRelatives_RelativeTypes")
                        .IsRequired();

                    b.HasOne("GuideMVC_.Models.User", "ToUser")
                        .WithMany("UserRelativeToUsers")
                        .HasForeignKey("ToUserId")
                        .HasConstraintName("FK_UserRelatives_User")
                        .IsRequired();

                    b.Navigation("FromUser");

                    b.Navigation("RelativeType");

                    b.Navigation("ToUser");
                });

            modelBuilder.Entity("GuideMVC_.Models.Gender", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GuideMVC_.Models.RelativeType", b =>
                {
                    b.Navigation("UserRelatives");
                });

            modelBuilder.Entity("GuideMVC_.Models.User", b =>
                {
                    b.Navigation("UserRelativeFromUsers");

                    b.Navigation("UserRelativeToUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
